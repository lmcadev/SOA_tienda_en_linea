# Docker Compose configuration - Testing working services first
services:
  eureka:
    build: ./plataforma/eureka-servidor
    ports:
      - "8761:8761"
    environment:
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: "false"
      EUREKA_CLIENT_FETCH_REGISTRY: "false"
    networks:
      - interna

  gateway:
    build: ./plataforma/gateway
    ports:
      - "8090:8090"
    environment:
      URL_EUREKA: ${URL_EUREKA}
      CLAVE_PUBLICA_JWT: ${CLAVE_PUBLICA_JWT}
    depends_on:
      - eureka
    networks:
      - interna
      - externa

  autenticacion:
    build: ./plataforma/servicio-autenticacion
    ports:
      - "8081:8081"
    environment:
      SECRETO_JWT: ${SECRETO_JWT}
      URL_EUREKA: http://eureka:8761/eureka
      URL_BD_AUTH: jdbc:postgresql://bd_auth:5432/auth
      USUARIO_AUTH: postgres
      CONTRASENA_AUTH: auth_password
    depends_on:
      - eureka
      - bd_auth
    networks:
      - interna

  cola_mensajes:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - interna

  # Servicios de base de datos
  bd_pedidos:
    image: postgres:16
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: ${USUARIO_PEDIDOS}
      POSTGRES_PASSWORD: ${CONTRASENA_PEDIDOS}
      POSTGRES_DB: pedidos
    networks:
      - interna

  bd_inventario:
    image: postgres:16
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: ${USUARIO_INVENTARIO}
      POSTGRES_PASSWORD: ${CONTRASENA_INVENTARIO}
      POSTGRES_DB: inventario
    networks:
      - interna

  bd_pagos:
    image: postgres:16
    ports:
      - "5435:5432"
    environment:
      POSTGRES_USER: ${USUARIO_PAGOS}
      POSTGRES_PASSWORD: ${CONTRASENA_PAGOS}
      POSTGRES_DB: pagos
    networks:
      - interna

  bd_notificaciones:
    image: postgres:16
    ports:
      - "5436:5432"
    environment:
      POSTGRES_USER: ${USUARIO_NOTIFICACIONES}
      POSTGRES_PASSWORD: ${CONTRASENA_NOTIFICACIONES}
      POSTGRES_DB: notificaciones
    networks:
      - interna

  bd_auth:
    image: postgres:16
    ports:
      - "5437:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: auth_password
      POSTGRES_DB: auth
    networks:
      - interna

  # servicios de la aplicaci√≥n
  pedidos:
    build: ./servicios/servicio-pedidos
    ports:
      - "8082:8082"
    environment:
      URL_BD_PEDIDOS: ${URL_BD_PEDIDOS}
      USUARIO_PEDIDOS: ${USUARIO_PEDIDOS}
      CONTRASENA_PEDIDOS: ${CONTRASENA_PEDIDOS}
      URL_EUREKA: ${URL_EUREKA}
      HOST_COLA: ${HOST_COLA}
    depends_on:
      - eureka
      - bd_pedidos
      - cola_mensajes
    networks:
      - interna

  inventario:
    build: ./servicios/servicio-inventario
    ports:
      - "8083:8083"
    environment:
      URL_BD_INVENTARIO: ${URL_BD_INVENTARIO}
      USUARIO_INVENTARIO: ${USUARIO_INVENTARIO}
      CONTRASENA_INVENTARIO: ${CONTRASENA_INVENTARIO}
      URL_EUREKA: ${URL_EUREKA}
      HOST_COLA: ${HOST_COLA}
    depends_on:
      - eureka
      - bd_inventario
      - cola_mensajes
    networks:
      - interna

  pagos:
    build: ./servicios/servicio-pagos
    ports:
      - "8084:8084"
    environment:
      URL_BD_PAGOS: ${URL_BD_PAGOS}
      USUARIO_PAGOS: ${USUARIO_PAGOS}
      CONTRASENA_PAGOS: ${CONTRASENA_PAGOS}
      URL_EUREKA: ${URL_EUREKA}
    depends_on:
      - eureka
      - bd_pagos
    networks:
      - interna

  notificaciones:
    build: ./servicios/servicio-notificaciones
    ports:
      - "8085:8085"
    environment:
      URL_BD_NOTIFICACIONES: ${URL_BD_NOTIFICACIONES}
      USUARIO_NOTIFICACIONES: ${USUARIO_NOTIFICACIONES}
      CONTRASENA_NOTIFICACIONES: ${CONTRASENA_NOTIFICACIONES}
      URL_EUREKA: ${URL_EUREKA}
      HOST_COLA: ${HOST_COLA}
    depends_on:
      - eureka
      - bd_notificaciones
      - cola_mensajes
    networks:
      - interna

networks:
  interna:
    driver: bridge
  externa:
    driver: bridge